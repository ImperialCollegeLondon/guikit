name: Test and build

on: [push, pull_request, release]

jobs:
  style:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install flake8
        run: |
          python -m pip install --upgrade pip flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --max-complexity=10 --statistics
          
  test:
    needs: style
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: [3.8, 3.9]
        exclude:
          - os: ubuntu-latest
            python-version: 3.9

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        pip install -U -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-20.04 wxPython
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -e .[dev]
    - name: Test with pytest (Windows)
      if: matrix.os != 'ubuntu-latest'
      run: |
        python -m pytest
    - name: Test with pytest (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        xvfb-run -a python -m pytest

  docs:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docs
        uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs/"
          pre-build-command: |
            python -m pip install --upgrade pip setuptools wheel
            pip install -r requirements-doc.txt
